ARG IMAGE_REPO
FROM ${IMAGE_REPO:-uselagoon}/python-3.8

# Internal environment variables
ENV APP_DIR=/srv/app
ENV SRC_DIR=/srv/app/src
ENV CKAN_INI=${APP_DIR}/ckan.ini
ENV PIP_SRC=${SRC_DIR}
ENV CKAN_STORAGE_PATH=/var/lib/ckan
ENV GIT_URL=https://github.com/ckan/ckan.git
# CKAN version to build
ENV GIT_BRANCH=ckan-2.9.1
# Customize these on the .env file if needed
ENV CKAN_SITE_URL=http://localhost:5000
ENV CKAN__PLUGINS image_view text_view recline_view datastore datapusher envvars

WORKDIR ${APP_DIR}

# Install necessary packages to run CKAN
RUN apk update \
    && apk upgrade \
    && apk add --no-cache tzdata \
    git \
    gettext \ 
    libpq \
    postgresql-dev \
    gcc \
    make \
    g++ \
    autoconf \
    automake \
    libtool \
    musl-dev \
    file-dev \
    libxslt-dev \
    libxml2-dev \
    linux-headers \
    libffi-dev \
    libmagic \
    curl \
    sudo

# Create Source directory
RUN mkdir -p ${SRC_DIR} && \
    fix-permissions ${SRC_DIR}

RUN cd ${APP_DIR} && \
    python3 -m venv ${APP_DIR} && \
    source ${APP_DIR}/bin/activate \
    && pip3 install setuptools==44.1.0

# Virtual environment binaries/scripts to be used first
ENV PATH=${APP_DIR}/bin:${PATH}   
    
# Install CKAN and uwsgi
RUN pip3 install -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan && \ 
    pip3 install uwsgi && \
    cd ${SRC_DIR}/ckan && \
    cp who.ini ${APP_DIR} && \
    pip install --no-binary :all: -r requirements.txt && \
    # Install CKAN envvars to support loading config from environment variables
    pip3 install -e git+https://github.com/okfn/ckanext-envvars.git#egg=ckanext-envvars && \
    # Create and update CKAN config
    ckan generate config ${CKAN_INI}

# Install and configure supervisor
RUN pip3 install supervisor && \
mkdir /etc/supervisord.d

# Copy all setup files
COPY setup ${APP_DIR}

# Create a local user and group to run the app
RUN addgroup -g 92 -S ckan && \
    adduser -u 92 -h /srv/app -H -D -S -G ckan ckan